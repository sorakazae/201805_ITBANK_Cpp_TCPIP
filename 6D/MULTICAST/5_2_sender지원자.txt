#pragma comment(lib,"ws2_32.lib")
#include <winsock2.h>
#include <stdio.h>
#include <ws2tcpip.h>
#include < io.h >
#include<conio.h>
#define ESC 0x1b
typedef struct info{
	char name[100];
	char addr[100];
	char money[100];
}INFO;
int main()
{
	/*윈속 생성*/
	WSADATA wsa;
	WSAStartup(MAKEWORD(2,2),&wsa);
	
	/*소켓 생성*/
	SOCKET s;
	s=socket(AF_INET, SOCK_DGRAM,0);
	if(s == INVALID_SOCKET){
		printf("SOCKET ERROR!!\n");
		return -1;
	}
	
	/*소켓 옵션 설정*/
	int ttl;
	setsockopt(s,IPPROTO_IP,IP_MULTICAST_TTL,(char*)&ttl,sizeof(ttl));
	
	/*통신할 대상의 주소 구조체*/
	SOCKADDR_IN sendAddr;
	sendAddr.sin_addr.s_addr = inet_addr("233.3.3.3");
	sendAddr.sin_port = htons(22222);
	sendAddr.sin_family = AF_INET;
	
	/*데이터 전송*/
	int error=0;
	char message[100]={0};
	sprintf(message, "안녕하세요!!!\n 출력 결과에 맞춰 입력해 주세요!!!\n");
	
	error=sendto(s,message,sizeof(message),0,(sockaddr*)(&sendAddr),sizeof(sendAddr));
	if(error == SOCKET_ERROR){
		printf("SENDTO ERROR!!\n");
		return -1;
	}	

	printf("기본 저장은 c:\\test\\ 아래 저장 됩니다!!!\n");

	SOCKADDR_IN recvAddr;
	int recvLen = sizeof(recvAddr);
	int rcvtime=10000;
	setsockopt(s,SOL_SOCKET,SO_RCVTIMEO,(char*)&rcvtime,sizeof(rcvtime));
	INFO peinfo={0};
	FILE * fp;
	char path[100] = "c:\\test\\";
	char buf[1024]={0};
	while(1)
	{	

		error=recvfrom(s,(char*)&peinfo,sizeof(peinfo),0,(sockaddr*)(&recvAddr), &recvLen);
		//printf("error : %d\n",error);
		if(error == SOCKET_ERROR){
			printf("recvfrom 에러!!!!");
			break;
		}
		strcat(path,peinfo.name);
		strcat(path,".txt");
		fp = fopen(path,"w");
		printf("path : %s\n",path);
		sprintf(buf,"이름 : %s\n지원 동기 : %s\n희망 연봉 : %s\n",peinfo.name,peinfo.addr,peinfo.money);
		fwrite(buf,1,sizeof(buf),fp);
		fclose(fp);
		strcpy(path,"c:\\test\\");
	}

	int cnt=0;
	struct _finddata_t c_file;
	long hFile;
	char filecnt[100][100]={0};
	char choice=0;
	char applicant[1024]={0};
	int fsize=0;
	while(1){
		system("cls");
		
		if((hFile = _findfirst( "c:\\test\\*.txt", &c_file )) == -1 )
			printf( "잘못된 위치 입니다!\n" );
		else
		{
			do
			{	
				//printf( "%d : %s\n",cnt,c_file.name);
				sprintf(filecnt[cnt++],"%s",c_file.name);
			}while( _findnext( hFile, &c_file ) == 0 );
			_findclose( hFile );
		}
		while(1){
			for(int i=0;i<cnt;i++){
				printf( "%d : %s\n",i,filecnt[i]);
			}
			printf("확인하고자 하는 번호 선택 (종료esc): ");
			if((choice=getch()) == ESC){
				printf("프로그램 종료 합니다!!!\n");
				return -1;
			}
			strcat(path,filecnt[atoi(&choice)]);
			//printf("path : : : %s\n",path);
			fp = fopen(path,"r");
			if(fp==NULL){
				printf("없는 지원자 입니다!!!\n");
			}else{
				fseek(fp,0,SEEK_END);
				fsize = ftell(fp);
				fseek(fp,0,SEEK_SET);
				fread(applicant,1,fsize,fp);
				printf("\n\n지원자\n\n%s",applicant);
				strcpy(path,"c:\\test\\");
			}
			printf("\n");
			system("pause");system("cls");
			
		}
	}
	closesocket(s);
	WSACleanup();
	
	return 0;
}